
config:
  clientID: adjoda-webapp
  #clientSecret: sHlVDQLhii/iJTmD0AYelXww0jUrY3EHpKj6CeER15Y=
  cookieSecret: YmglTnMTSm2XqD1qvNnKzR2ffhp2pr20ijylhK4MzYA=
  configFile: |
    email_domains = ["*"]
    upstreams = ["static://200"]
extraArgs:
  provider: keycloak-oidc
  oidc-issuer-url: https://keycloak.adjoda.com.ngrok.app/realms/adjoda-dev-realm
  provider-display-name: Keycloak
  skip-provider-button: true
  pass-authorization-header: true
  code-challenge-method: S256
  redirect-url: http://adjodadev.com/oauth2/callback
  cookie-csrf-per-request: true
  cookie-secure: false
  #cookie-domain: .adjodadev.com
  #whitelist-domain: .adjodadev.com
  silence-ping-logging: true
  cookie-domain: adjodadev.com
  whitelist-domain: adjodadev.com
  reverse-proxy: true

  pass-access-token: true            # renvoyer l'access_token côté proxy
  set-authorization-header: true     # construire Authorization: Bearer <token>
  set-xauthrequest: true             # (optionnel) X-Auth-Request-* headers
  #scope: "openid email profile roles"
  scope: "openid profile email"

  #redirect-url: http://adjodadev.com/oauth2/callback
  #cookie-secure: "false"
  #cookie-domain: adjodadev.com
  #whitelist-domain: adjodadev.com
  #reverse-proxy: true
  #provider: keycloak-oidc
  #oidc-issuer-url: https://keycloak.adjoda.com.ngrok.app/realms/adjoda-dev-realm



ingress:
  enabled: true
  ingressClassName: traefik
  annotations: {}
  hosts:
    - adjodadev.com
  path: /oauth2
  pathType: Prefix